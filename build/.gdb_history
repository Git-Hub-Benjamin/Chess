print possibleMoveCounter 
print piece
print from
next
step
step
next
pritn possibleMove
print possibleMoveCounter 
print piece
print PIECE_MOVESET
print pointToGetTo 
next
break chessfunctionality.cpp:263
c
print from
print from.pos
print PIECE_MOVESET->moves[i]
print to
print pointToMoveFrom
print PIECE_MOVESET->moves[i].y
print from.pos
print from
quit
quit
break main
layout src
run
next
ref
next
run
next
layout src
ref
next
step
next
ref
next
ref
next
next
ref
next
next
print movePiece
print *movePiece
next
step
next
next
next
ref
next
print moveTo
next
print moveToSquare
print *moveToSquare
break clientlocalgame.cpp:66
run
run
c
ref
step
print game
a
print move
print move[0]
quit
break clientlocalgame.cpp:66
c
run
layout src
print wTest
print moveTo.c_str()
call printf("%ls", str._M_data())
call printf("%ls", moveTo._M_data())
call (void)printf("\"%ls\"\n",moveTo)
call printf("%ls", moveTo)
print res
run
break clientlocalgame.cpp:60
run
ref
step
next
ref
next
print dst[0]
print dst
quit
quit
quit
break clientlocalgame.cpp:66
run
layout src
print_std_wstring moveTo
source ~/.gdbinit.py
source ~/.gdbinit.py
quit
source ~/.gdbinit.py
break clientlocalgame.cpp:66
run
print_std_wstring moveTo
quit
source ~/.gdbinit.py
break clientlocalgame.cpp:66
run
print_std_wstring moveTo
gdb --version
gdb --version
--version
version
quit
quit
source ~/.gdbinit
break clientlocalgame.cpp:60
run
a3
next
next
wc_print moveTo.c_str()
quit
quit
break clientlocalgame.cpp:60
run
neext
next
next
source ~/.gdbinit
print_std_wstring moveTo
quit
break clientlocalgame.cpp:60
run
next
next
print_std_string moveTo
source ~/.gdbinit
print_std_string moveTo
print_std_wstring moveTo
quit
source ~/.gdbinit
n
run
break clientlocalgame.cpp:60
run
a3
next
next
print_std_wstring moveTo
quit
define wc_print
echo "
set $c = (wchar_t*)$arg0
while ( *$c )
  if ( *$c > 0x7f )
    printf "[%x]", *$c
  else
    printf "%c", *$c
  end
  set $c++
end
echo "\n
end
quit
wc_print
document wc_print
quit
help wc_print
help
quit
help wc_print
quit
break main
run
next
next
step
next
break clientlocalgame.cpp:67
c
wc_print moveTo
step
print game.GameBoard[8 - (move[1] - 48)][move[0] - 97]
print game.GameBoard
rAef
print game.GameBoard[8 - (move[1] - 48)][move[0] - 97]
print &game.GameBoard[8 - (move[1] - 48)][move[0] - 97]
print game.GameBoard[0][0]
print move[1]
quit
break clientlocalgame.cpp:67
run
step
next
print a
print b
next
print b
8 - 51 - 48
print (8-51 - 48)
next
layout src
print moveToSquare
print *moveToSquare
print 8 - (51 - 48)
print 97-97
quit
break main
c
break clientlocalgame.cpp:67
run
c
layout src
step
next
print a
print b
print 8 - (97 - quit
quit
break clientlocalgame.cpp:67
run
step'
step
next
print a
print b
print 8 - (b - 48)
print a - 97
next
print temp
print *temp
print game.GameBoard[4][0]
quit
break clientlocalgame.cpp:67
run
step
next
print temp
print *temp
next
c
delete 1
c
quit
break main
layout src
run
next
ref
next
5
next
next
quit
